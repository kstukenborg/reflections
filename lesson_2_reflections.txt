
What happens when you initialize a repository.  Why do you need to do it?
When you initialize it, it creates the .git file and it then know what files are in the directory.  It doesn't do an commit.

How is the staging area different from the working directory and the repository? What value do you think it offers?
The staging area contains the files that you would like to commit next.  The working directory is all of the files in the directory.
The repository are all of the files that have been committed ????

How can you use the staging area to make sure you have one commit per logical change?

You can choose to commit only certain files in your staging error that are associated with a logical change.  You don't need to commit all of them at once.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
If you are making experimental changes, but still want to have a working copy of the code.
If you want to try a different language.
How do the diagrams help you visualize the branch structure?
It helps you see if there are any unaccessible commits.  It helps you see what features were implemented in different branches

